---
# Location of backups
restic_repo_path: '/var/backups/restic'
restic_cache_path: '{{ restic_user_home }}/.cache/restic'
# This password encrypts the repository repo pass.
#restic_repo_master_pass:
# We generate password by hashing the master pasword with SHA512
# using a slice of the machine ID as salt.
# Should give you the same password on the same host.
restic_repo_pass: >-
  {{ restic_repo_master_pass | mandatory
  | password_hash('sha512', (ansible_machine_id)[0:16], rounds=5000)
  | string }}
# If necessary set this to true to allow repo password change.
restic_repo_pass_allow_change: false
restic_repo_pass_file: '{{ restic_user_home }}/.restic_pass'

# Maximum number of backups to keep for each type.
# WARNING: Watch out for clashing with other timers due to lock.
restic_pruning_enabled: true
restic_pruning_retention: 30
restic_pruning_retry_lock: 10m
restic_pruning_frequency: '23:00'
restic_pruning_timeout: 300

# User to run backups as
restic_user_name: 'restic'
restic_user_uid: 9001
restic_user_home: '/home/restic'
restic_user_groups: []

# SSH/SFTP Access
#restic_ssh_public_key: ~

# https://github.com/restic/restic/releases/tag/v0.17.1
restic_version: '0.17.1'
restic_bz2: 'restic_{{ restic_version }}_linux_amd64.bz2'
restic_bz2_url: 'https://github.com/restic/restic/releases/download/v{{ restic_version }}/{{ restic_bz2 }}'
restic_bz2_sha256: 'bdfaf16fe933136e3057e64e28624f2e0451dbd47e23badb2d37dbb60fdb6a70'
restic_binary_path: '/usr/local/bin/restic'
restic_backup_size_check_script: '/usr/local/bin/backup-check-script.sh'

# Default values for unset settings in restic_backups objects.
restic_backup_default_frequency: 'daily'
restic_backup_default_timeout: 120
# Restart options: no, always, on-success, on-failure, on-abnormal, on-abort, on-watchdog
restic_backup_default_restart: 'on-failure'
restic_backup_default_restart_delay: 3600 # 1h
restic_backup_default_restart_retries: 8
# Link for service definition
restic_backup_default_docs_url: 'https://github.com/status-im/infra-role-restic-backups'

# Do no create a snapshot if nothing changed.
backup_skip_if_unchanged: true

# backups should be larger than 512 KB
backup_size_threshold_bytes: 512000

# list of objects that define resources to back up
restic_backups: []
#  - name: 'app-xyz-postgres'
#    tags: ['postgres']
#    path: '/docker/app-xyz/db/backup'
#    excludes: ['logs']
#    requires: 'dump-xyz-db.service'
#    after: 'dump-xyz-db.service'
#    frequency: 'daily'
#    timeout: 120
#    restart: 'no'
#    restart_retries: 3
#    timeout: 120
#    enabled: true
